To compile the program simply type "$ make"

To run the server, type "$ make run"
Otherwise, after compiling, run the front_server executable with no arguments.

To run the client, type "$ ./client"
The client program automatically connects to the server, so if the server is not
being run, the client will exit after a timeout of 5 seconds.

--- / ---

Auxiliar information:

When the front_server is running (and reading from the terminal), if "print" is
typed, the data_server will print the actual contents on the terminal.

If the program terminates cleanly, the "backup" file will contain the database
information.
If the program terminates abruptly, the "log" file will contain all relevant
information to reconstruct the database. There will never be both a "backup" and
a "log" files at the same time.

--- / ---

Relevant definitions:

- interprocess.h
-- defined the AF_UNIX socket location, used for the communication between
front_server and data_server;
-- defined TIMEOUT, variable used to assure fault tolerance;

- database.h
-- defined the prime number used as the dimension of the data structure: DATA_PRIME
-- defined the name of the backup and log files, as well as their temporary names

- psiskv_data_server.c
-- defined number of threads on thread pool NUM_THREADS;
-- defined number of clients that can wait on accept call BACKLOG;

- psiskv_front_server.c
-- defined listener port as indicated on project LISTENER_PORT;
